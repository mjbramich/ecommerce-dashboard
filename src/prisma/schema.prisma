// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id        String        @id @default(uuid())
  name      String
  userId    String
  billboards Billboard[] @relation("StoreToBillboard")
  categories Category[]  @relation("StoreToCategory")
  products   Product[]   @relation("StoreToProduct")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Billboard {
  id        String @id @default(uuid())
  storeId   String
  store     Store @relation("StoreToBillboard", fields: [storeId], references: [id])
  label     String
  imageUrl  String
  categories Category[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId]) // manually create Index 
}

model Category {
  id        String @id @default(uuid())
  storeId   String
  store     Store @relation("StoreToCategory", fields: [storeId], references: [id])
  billboardId String
  billboard Billboard @relation(fields: [billboardId], references: [id])
  products  Product[] @relation("CategoryToProduct")
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId]) // manually create Index
  @@index([billboardId]) // manually create Index

}

model Product {
  id        String @id @default(uuid())
  storeId   String
  store      Store @relation("StoreToProduct", fields: [storeId], references: [id])
  categoryId String
  category    Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  name      String
  price     Decimal
  size      String  // filters
  team      String // filters
  featured  Boolean @default(false)
  archived  Boolean @default(false)
  // Need more than one image per product sometimes
  images     Image[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([categoryId])

}

model Image {
  id        String @id @default(uuid())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}